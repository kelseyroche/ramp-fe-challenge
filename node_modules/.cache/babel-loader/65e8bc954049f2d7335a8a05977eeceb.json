{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useCallback, useState } from \"react\"\n// import { Employee } from \"../utils/types\"\n// import { useCustomFetch } from \"./useCustomFetch\"\n// import { EmployeeResult } from \"./types\"\n// export function useEmployees(): EmployeeResult {\n//   const { fetchWithCache, loading } = useCustomFetch()\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n//   const fetchAll = useCallback(async () => {\n//     const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n//     setEmployees(employeesData)\n//   }, [fetchWithCache])\n//   const invalidateData = useCallback(() => {\n//     setEmployees(null)\n//   }, [])\n//   return { data: employees, loading, fetchAll, invalidateData }\n// }\nimport { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading: isLoadingEmployees\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const employeesData = await fetchWithCache(\"employees\");\n    setEmployees(employeesData || []);\n  }, [fetchWithCache]);\n  useEffect(() => {\n    fetchAll();\n  }, [fetchAll]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n  return {\n    data: employees,\n    loading: isLoadingEmployees,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(useEmployees, \"wLfa8FbcjUk9Gl8eyDGCshom0hY=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useEffect","useCustomFetch","useEmployees","fetchWithCache","loading","isLoadingEmployees","employees","setEmployees","fetchAll","employeesData","invalidateData","data"],"sources":["/project/ramp-fe-challenge/src/hooks/useEmployees.ts"],"sourcesContent":["// import { useCallback, useState } from \"react\"\n// import { Employee } from \"../utils/types\"\n// import { useCustomFetch } from \"./useCustomFetch\"\n// import { EmployeeResult } from \"./types\"\n\n// export function useEmployees(): EmployeeResult {\n//   const { fetchWithCache, loading } = useCustomFetch()\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n\n//   const fetchAll = useCallback(async () => {\n//     const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n//     setEmployees(employeesData)\n//   }, [fetchWithCache])\n\n//   const invalidateData = useCallback(() => {\n//     setEmployees(null)\n//   }, [])\n\n//   return { data: employees, loading, fetchAll, invalidateData }\n// }\nimport { useCallback, useState, useEffect } from \"react\"\nimport { Employee } from \"../utils/types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { EmployeeResult } from \"./types\"\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading: isLoadingEmployees } = useCustomFetch()\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n    setEmployees(employeesData || [])\n  }, [fetchWithCache])\n\n  useEffect(() => {\n    fetchAll()\n  }, [fetchAll])\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null)\n  }, [])\n\n  return { data: employees, loading: isLoadingEmployees, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC,OAAO,EAAEC;EAA3B,IAAkDJ,cAAc,EAAtE;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAoB,IAApB,CAA1C;EAEA,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvC,MAAMW,aAAa,GAAG,MAAMN,cAAc,CAAa,WAAb,CAA1C;IACAI,YAAY,CAACE,aAAa,IAAI,EAAlB,CAAZ;EACD,CAH2B,EAGzB,CAACN,cAAD,CAHyB,CAA5B;EAKAH,SAAS,CAAC,MAAM;IACdQ,QAAQ;EACT,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIA,MAAME,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACvCS,YAAY,CAAC,IAAD,CAAZ;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEI,IAAI,EAAEL,SAAR;IAAmBF,OAAO,EAAEC,kBAA5B;IAAgDG,QAAhD;IAA0DE;EAA1D,CAAP;AACD;;GAlBeR,Y;UAC0CD,c"},"metadata":{},"sourceType":"module"}
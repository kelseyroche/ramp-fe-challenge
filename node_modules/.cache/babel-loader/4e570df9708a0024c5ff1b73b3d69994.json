{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { fakeFetch } from \"../utils/fetch\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nexport function useCustomFetch() {\n  _s();\n\n  const {\n    loading,\n    wrappedRequest\n  } = useWrappedRequest();\n  const fetchWithCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const result = await fakeFetch(endpoint, params);\n    return result;\n  }), [wrappedRequest]);\n  const fetchWithoutCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const result = await fakeFetch(endpoint, params);\n    return result;\n  }), [wrappedRequest]);\n  return {\n    fetchWithCache,\n    fetchWithoutCache,\n    loading\n  };\n}\n\n_s(useCustomFetch, \"//hOMI2PqGVRfuC5UEE0SISzijw=\", false, function () {\n  return [useWrappedRequest];\n});","map":{"version":3,"names":["useCallback","fakeFetch","useWrappedRequest","useCustomFetch","loading","wrappedRequest","fetchWithCache","endpoint","params","result","fetchWithoutCache"],"sources":["/project/ramp-fe-challenge/src/hooks/useCustomFetch.ts"],"sourcesContent":["import { useCallback } from \"react\"\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\nimport { useWrappedRequest } from \"./useWrappedRequest\"\n\nexport function useCustomFetch() {\n  const { loading, wrappedRequest } = useWrappedRequest()\n\n  const fetchWithCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> =>\n      wrappedRequest<TData>(async () => {\n        const result = await fakeFetch<TData>(endpoint, params)\n        return result\n      }),\n    [wrappedRequest]\n  )\n\n  const fetchWithoutCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> =>\n      wrappedRequest<TData>(async () => {\n        const result = await fakeFetch<TData>(endpoint, params)\n        return result\n      }),\n    [wrappedRequest]\n  )\n\n  return { fetchWithCache, fetchWithoutCache, loading }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA+C,gBAA/C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,SAASC,cAAT,GAA0B;EAAA;;EAC/B,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAA8BH,iBAAiB,EAArD;EAEA,MAAMI,cAAc,GAAGN,WAAW,CAChC,OACEO,QADF,EAEEC,MAFF,KAIEH,cAAc,CAAQ,YAAY;IAChC,MAAMI,MAAM,GAAG,MAAMR,SAAS,CAAQM,QAAR,EAAkBC,MAAlB,CAA9B;IACA,OAAOC,MAAP;EACD,CAHa,CALgB,EAShC,CAACJ,cAAD,CATgC,CAAlC;EAYA,MAAMK,iBAAiB,GAAGV,WAAW,CACnC,OACEO,QADF,EAEEC,MAFF,KAIEH,cAAc,CAAQ,YAAY;IAChC,MAAMI,MAAM,GAAG,MAAMR,SAAS,CAAQM,QAAR,EAAkBC,MAAlB,CAA9B;IACA,OAAOC,MAAP;EACD,CAHa,CALmB,EASnC,CAACJ,cAAD,CATmC,CAArC;EAYA,OAAO;IAAEC,cAAF;IAAkBI,iBAAlB;IAAqCN;EAArC,CAAP;AACD;;GA5BeD,c;UACsBD,iB"},"metadata":{},"sourceType":"module"}